{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justigy","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchCountriesDetails","setFetchCountriesDetails","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","CoronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2111ee0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3lME5\",\"card\":\"Cards_card__28rvQ\",\"infected\":\"Cards_infected__18NKy\",\"recovered\":\"Cards_recovered__3M_TP\",\"deaths\":\"Cards_deaths__29c9_\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data : {confirmed ,recovered , deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return \"Loading ....\"\r\n    }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justigy=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Infected People</Typography>\r\n            <Typography variant=\"h5\">\r\n            <CountUp start={0} end ={confirmed.value} duration={2.5} separator=',' />\r\n             </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Recovered People</Typography>\r\n            <Typography variant=\"h5\"><CountUp start={0} end ={recovered.value} duration={2.5} separator=',' /> </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Recovery cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Deaths</Typography>\r\n            <Typography variant=\"h5\"><CountUp start={0} end ={deaths.value} duration={2.5} separator=',' /> </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Deaths casused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) {\r\n    changeableUrl =`${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.log(\"fetchData -> error\", error)\r\n\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries =async () => {\r\n  try {\r\n    const {data : {countries}} = await axios.get(`${url}/countries`)\r\n    return countries.map((country)=> country.name)\r\n  } catch (error) {\r\n    \r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state i ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}> {country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchCountriesDetails, setFetchCountriesDetails] = useState([]);\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n        setFetchCountriesDetails(await fetchCountries());\r\n    };\r\n    fetchApi();\r\n  },[setFetchCountriesDetails]);    \r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchCountriesDetails.map((country,i )=>\r\n            <option key ={i} value={country}>{country}</option>\r\n    )}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./Components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/index\";\r\nimport CoronaImage from \"./images/image.png\";\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={CoronaImage} alt=\"COVID-19\" /> \r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react' ;\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1U_XM\",\"image\":\"App_image__3lOL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2EHDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__xalVJ\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}